# -*- coding: utf-8 -*-
"""Financial Analytics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hW4Ui-FNP3zvoJ95oGDoGJm0aEoUXcKe

**Project Title: Financial Analytics using Python and its Libraries**

**Programming Language:** Python Programming


**Libraries:** NumPy, Pandas, Matplotlib, Seaborn

**Problem Statement:**

Without analyzing the competition, it is difficult for a business to survive.

You are tasked to analyzing the competition for the management to provide better results.

This data set has information on the market capitalization of the top 500 companies in India.

Serial Number, Name of Company, Market Capitalization in Crores ,Quarterly Sale in crores

Find key metrics and factors and show the meaningful relationships between attributes.

Do your own research and come up with your findings.

**Importing Libraries**
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import warnings
warnings.filterwarnings('ignore')

"""**Loading Dataset**"""

df = pd.read_csv("/content/Financial Analytics data.csv")
df.head()

df.columns

df.shape

df.info()

"""**Checking Duplicate Values**"""

df.isnull().sum()

"""**Calculating Percentage of Missing Values**"""

missing_percentage = (df.isnull().sum()/len(df))*100
print(missing_percentage)

"""**Dropping the Unnamed Column**"""

df = df.drop('Unnamed: 4', axis=1)
df.head()

df['Sales Qtr - Crore'].fillna(df['Sales Qtr - Crore'].mean(), inplace=True)

df['Mar Cap - Crore'].fillna(df['Mar Cap - Crore'].mean(), inplace=True)

df.isnull().sum()

df.describe()

"""**Market Capitalization to Sales Ratio:** This ratio can give insight into how well a company is utilizing its market capital for sales."""

df['MarCap_to_Sales']=df['Mar Cap - Crore']/df['Sales Qtr - Crore']

"""**Market Capitalization Categories:** Create categories based on market capitalization to group companies."""

bins=[0, 1000, 5000, 10000, np.inf]
labels=['Small Cap', 'Mid Cap', 'Large Cap', 'Mega Cap']
df['MarCap_Category']=pd.cut(df['Mar Cap - Crore'],
bins=bins, labels=labels)

plt.figure(figsize=(10,6))
sns.countplot(x='MarCap_Category',data=df,palette='viridis')
plt.title('Distribution of Companies by Market Capitalization Category')
plt.xlabel('Market Capitalization Category')
plt.ylabel('Number of Companies')
plt.show()

"""**Box Plot of Sales per Market Capitalization Category:**
A box plot can help you understand the distribution of sales within each market capitalization category.
"""

sns.boxplot(x='MarCap_Category', y='MarCap_to_Sales', data=df)
plt.title('Market Capitalization to Sales Ratio by Market Capitalization Category')
plt.show()

"""**Histograms and Distribution Analysis without log transformation:**

**Skewness:** The data might remain highly skewed, leading to histograms that are heavily concentrated in one area, making it hard to interpret the distribution.

**Outliers:** Extreme values (outliers) can dominate the plot, overshadowing the rest of the data and making it difficult to see the overall pattern.
"""

plt.figure(figsize=(10, 6))
sns.histplot(df['Mar Cap - Crore'], kde=True, color='blue')
plt.title('Distribution of Market Capitalization')
plt.xlabel('Market Capitalization (Mar Cap - Crore)')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(df['Sales Qtr - Crore'], kde=True, color='green')
plt.title('Distribution of Sales per Quarter')
plt.xlabel('Sales per Quarter (Sales Qtr - Crore)')
plt.ylabel('Frequency')
plt.show()

"""**With log transformation**

**Normalization:** Log transformation can help normalize the data, making it more symmetric and easier to analyze.

**Scale Reduction:** It reduces the impact of extreme values, bringing the data into a more manageable range and revealing underlying patterns.
"""

df['Log_MarCap'] = np.log(df['Mar Cap - Crore'])
df['Log_Sales'] = np.log(df['Sales Qtr - Crore'])

plt.figure(figsize=(10, 6))
sns.histplot(df['Log_MarCap'], kde=True, color='blue')
plt.title('Distribution of Log-Transformed Market Capitalization')
plt.xlabel('Log Market Capitalization (Log_MarCap)')
plt.ylabel('Frequency')
plt.show()

plt.figure(figsize=(10, 6))
sns.histplot(df['Log_Sales'], kde=True, color='green')
plt.title('Distribution of Log-Transformed Sales per Quarter')
plt.xlabel('Log Sales per Quarter (Log_Sales)')
plt.ylabel('Frequency')
plt.show()

"""**Scatter Plot and Relationship Analysis
Without log transformation:**

**Scale Issues:** If one variable spans several orders of magnitude more than the other, it can be hard to see the relationship between the variables in a scatter plot.

**Non-linearity:** The relationship between the variables might appear non-linear, making it difficult to interpret and analyze.
"""

plt.figure(figsize=(10, 6))
sns.scatterplot(x='Mar Cap - Crore', y='Sales Qtr - Crore', data=df, color='red')
plt.title('Scatter Plot of Market Capitalization vs. Sales')
plt.xlabel('Market Capitalization (Mar Cap - Crore)')
plt.ylabel('Sales per Quarter (Sales Qtr - Crore)')
plt.show()

"""**With log transformation:**

**Linear Relationship:** Log transformation can often linearize relationships, making them easier to interpret and model.

**Better Visualization:** The scale becomes more uniform, allowing for a clearer view of the relationship between the variables.
"""

plt.figure(figsize=(10, 6))
sns.scatterplot(x='Log_MarCap', y='Log_Sales', data=df, color='red')
plt.title('Scatter Plot of Log Market Capitalization vs. Log Sales')
plt.xlabel('Log Market Capitalization (Log_MarCap)')
plt.ylabel('Log Sales per Quarter (Log_Sales)')
plt.show()

"""**Sales Performance Indicator:**
Create a binary feature indicating good or poor sales performance based on a threshold
"""

Sales_Threshold = df['Sales Qtr - Crore'].mean()
df['Sales_Performance'] = df['Sales Qtr - Crore'].apply(lambda x: 'Good' if x > Sales_Threshold else 'Poor')

sns.countplot(x='Sales_Performance', data=df)
plt.title('Sales Performance Count')
plt.show()

sns.pairplot(df, vars=['Mar Cap - Crore', 'Sales Qtr - Crore', 'Log_MarCap', 'Log_Sales'], hue='MarCap_Category', palette='viridis')
plt.suptitle('Pair Plot of Numerical Features', y=1.02)
plt.show()

"""**Top 5 Companies with Highest Market Capitalization**"""

# Sort the dataset by market capitalization in descending order
sorted_data = df.sort_values('Mar Cap - Crore', ascending=False)

# Select the top 5 companies with the highest market capitalization
top_5_companies = sorted_data.head(5)


print(top_5_companies.value_counts())
# Plot the market capitalization of the top 5 companies
plt.figure(figsize=(10, 6))
plt.bar(top_5_companies['Name'], top_5_companies['Mar Cap - Crore'])
plt.title('Top 5 Companies with Highest Market Capitalization')
plt.xlabel('Company')
plt.ylabel('Market Capitalization (Crore)')
plt.xticks(rotation=45)
plt.show()

"""**Bottom 5 Companies with Low Market Capitalization**"""

#Sort the dataset by market capitalization in ascending order
sorted_data = df.sort_values('Mar Cap - Crore')

# Select the bottom 5 companies with the lowest market capitalization
bottom_5_companies = sorted_data.head(5)


print(bottom_5_companies.value_counts())



# Plot the market capitalization of the bottom 5 companies
plt.figure(figsize=(10, 6))
plt.bar(bottom_5_companies['Name'], bottom_5_companies['Mar Cap - Crore'])
plt.title('Bottom 5 Companies with Lowest Market Capitalization')
plt.xlabel('Company')
plt.ylabel('Market Capitalization (Crore)')
plt.xticks(rotation=45)
plt.show()

"""**Top 5 Companies with Highest Sales**"""

# Sort the dataset by sales in descending order
sorted_data = df.sort_values('Sales Qtr - Crore', ascending=False)

# Select the top 5 companies with the highest sales
top_5_companies_sales = sorted_data.head(5)

print(top_5_companies_sales.value_counts())
# Plot the sales of the top 5 companies
plt.figure(figsize=(10, 6))
plt.bar(top_5_companies_sales['Name'], top_5_companies_sales['Sales Qtr - Crore'])
plt.title('Top 5 Companies with Highest Sales')
plt.xlabel('Company')
plt.ylabel('Sales (Crore)')
plt.xticks(rotation=45)
plt.show()

"""**Bottom 5 Companies with Lowest Sales**"""

# Sort the dataset by sales in ascending order
sorted_data = df.sort_values('Sales Qtr - Crore')

# Select the bottom 5 companies with the highest sales
bottom_5_companies_sales = sorted_data.tail(5)
print(bottom_5_companies_sales.value_counts())
# Plot the sales of the bottom 5 companies
plt.figure(figsize=(10, 6))
plt.bar(bottom_5_companies_sales['Name'], bottom_5_companies_sales['Sales Qtr - Crore'])
plt.title('Bottom 5 Companies with Lowest Sales')
plt.xlabel('Company')
plt.ylabel('Sales (Crore)')
plt.xticks(rotation=45)
plt.show()

"""**Top 5 Companies with Markrt Capitalization to Sales Ratio**"""

# Sort the dataset by profit margin in descending order
sorted_data = df.sort_values('MarCap_to_Sales', ascending=False)

# Select the top 5 companies with the highest profit margin
top_5_companies_pm = sorted_data.head(5)


print(top_5_companies_pm.value_counts())

# Plot the profit margin of the top 5 companies
plt.figure(figsize=(10, 6))
plt.bar(top_5_companies_pm['Name'], top_5_companies_pm['MarCap_to_Sales'])
plt.title('Top 5 Companies with Highest Market Capitalization to Sales Ratio')
plt.xlabel('Company')
plt.ylabel('Market Capitalization to Sales Ratio')
plt.xticks(rotation=45)
plt.show()

"""**Bottom 5 Companies with Market Capitalization to Sales Ratio**"""

# Sort the dataset by profit margin in ascending order
sorted_data = df.sort_values('MarCap_to_Sales')

# Select the bottom 5 companies with the lowest profit margin
bottom_5_companies_pm = sorted_data.head(5)


print(bottom_5_companies_pm.value_counts())

# Plot the profit margin of the bottom 5 companies

plt.figure(figsize=(10, 6))
plt.bar(bottom_5_companies_pm['Name'], bottom_5_companies_pm['MarCap_to_Sales'])
plt.title('Bottom 5 Companies with Lowest Market Capitalization to Sales Ratio')
plt.xlabel('Company')
plt.ylabel('Market Capitalization to Sales Ratio')
plt.xticks(rotation=45)
plt.show()

"""**CONCLUSION**:

As sales increase, there is a tendency for market capitalization to increase as well. This indicates that sales performance has a significant impact on the market value of a company.

Therefore, companies should focus on strategies to drive sales growth. This can involve expanding market reach, introducing new products or services, improving marketing and sales efforts, and targeting customer needs effectively.

While sales have a positive correlation with market capitalization, it's important to note that market capitalization is influenced by various other factors as well. These factors can include industry trends, company profitability, competitive landscape, management quality, brand value, and investor sentiment. Therefore, market capitalization should not be solely relied upon as a measure of a company's performance or value.
"""